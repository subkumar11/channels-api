{"version":3,"sources":["/Users/subhash/workspaces/git/samples/channels-ui/src lazy","/Users/subhash/workspaces/git/samples/channels-ui/src/app/app-routing.module.ts","/Users/subhash/workspaces/git/samples/channels-ui/src/app/app.component.css","/Users/subhash/workspaces/git/samples/channels-ui/src/app/app.component.html","/Users/subhash/workspaces/git/samples/channels-ui/src/app/app.component.ts","/Users/subhash/workspaces/git/samples/channels-ui/src/app/app.module.ts","/Users/subhash/workspaces/git/samples/channels-ui/src/app/channel.component.css","/Users/subhash/workspaces/git/samples/channels-ui/src/app/channel.component.html","/Users/subhash/workspaces/git/samples/channels-ui/src/app/channel.component.ts","/Users/subhash/workspaces/git/samples/channels-ui/src/app/channel.ts","/Users/subhash/workspaces/git/samples/channels-ui/src/app/channelgroup.component.html","/Users/subhash/workspaces/git/samples/channels-ui/src/app/channelgroup.component.ts","/Users/subhash/workspaces/git/samples/channels-ui/src/app/channels.service.ts","/Users/subhash/workspaces/git/samples/channels-ui/src/environments/environment.ts","/Users/subhash/workspaces/git/samples/channels-ui/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/subhash/workspaces/git/samples/channels-ui/src lazy\n// module id = ../../../../../src lazy recursive\n// module chunks = main","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ChannelGroupComponent }    from './channelgroup.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/channels', pathMatch: 'full' },\n  { path: 'channels',  component: ChannelGroupComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/app.component.ts","import { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { HttpModule }     from '@angular/http';\n\nimport { AppComponent }        from './app.component';\nimport { ChannelComponent }   from './channel.component';\nimport { ChannelGroupComponent }   from './channelgroup.component';\nimport { ChannelsService }     from './channels.service';\nimport { AppRoutingModule }    from './app-routing.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule\n  ],\n  declarations: [\n    AppComponent,\n    ChannelComponent,\n    ChannelGroupComponent\n  ],\n  providers: [ ChannelsService ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/app.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/channel.component.css\n// module id = ../../../../../src/app/channel.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col l1\\\"><img class=\\\"circle\\\" src=\\\"{{channel.subjectPhotoUrl}}\\\"/></div>\\n  <div class=\\\"col l6\\\"><b>{{channel.title}}</b><br/>{{channel.description}}</div>\\n  <div class=\\\"col l1\\\"><img class=\\\"circle\\\" src=\\\"{{channel.instructorPhotoUrl}}\\\"/></div>\\n  <div class=\\\"col l2\\\">{{channel.instructorName}}</div>\\n  <div class=\\\"col l2\\\">{{getFormattedTime(channel.time)}} - {{getFormattedTime(channel.time + 100)}} EDT</div>\\n  <div class=\\\"divider\\\"></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/channel.component.html\n// module id = ../../../../../src/app/channel.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { Channel }          from './channel';\n\n@Component({\n  selector: 'channel',\n  templateUrl: './channel.component.html',\n  styleUrls: [ './channel.component.css' ]\n})\n\nexport class ChannelComponent {\n  @Input() channel: Channel;\n\n  getFormattedTime(time: number): string {\n    var suffix = (time <= 1159)? ' AM': ' PM';\n    var timeStr = new String(((time > 1300)? time-1200 : time));\n    return ([timeStr.slice(0, timeStr.length-2), ':', timeStr.slice(timeStr.length-2)].join('') + suffix);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/channel.component.ts","export class Channel {\n  title: string;\n  description: string;\n  instructorName: string;\n  instructorPhotoUrl: string;\n  subjectPhotoUrl: string;\n  time: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/channel.ts","module.exports = \"<div class=\\\"container white\\\">\\n  <div *ngFor=\\\"let channelGroup of channelGroups\\\">\\n    <div class=\\\"row blue lighten-5\\\">\\n      <div class=\\\"col l12\\\">&nbsp;<br/><b>{{getFormattedDate(channelGroup.group)}}</b></div>\\n    </div>\\n    <channel *ngFor=\\\"let channel of channelGroup.channels\\\"\\n      [channel]=\\\"channel\\\">\\n    </channel>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/channelgroup.component.html\n// module id = ../../../../../src/app/channelgroup.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router }            from '@angular/router';\n\nimport { Channel }           from './channel';\nimport { ChannelGroup }      from './channelgroup';\nimport { ChannelsService }   from './channels.service';\n\n@Component({\n  selector: 'channel-group',\n  templateUrl: './channelgroup.component.html'\n})\nexport class ChannelGroupComponent implements OnInit {\n  channelGroups: ChannelGroup[];\n\n  constructor(\n    private channelsService: ChannelsService,\n    private router: Router) { }\n\n  getChannelGroups(): void {\n    this.channelsService\n        .getChannelGroups()\n        .then(channelGroups => this.channelGroups = channelGroups);\n  }\n\n  ngOnInit(): void {\n    this.getChannelGroups();\n  }\n\n  getFormattedDate(dateStr: string): string {\n    var monthNames = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n    var dayNames = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ];\n\n    var date = new Date(parseInt(dateStr));\n\n    return (dayNames[date.getDay()] + \", \" + monthNames[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/channelgroup.component.ts","import { Injectable }    from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { ChannelGroup } from './channelgroup';\n\n@Injectable()\nexport class ChannelsService {\n\n  private headers = new Headers({'Content-Type': 'application/json'});\n  private channelsUrl = '/channels/v1/channels/groupedByDate';  // URL to web api\n\n  constructor(private http: Http) { }\n\n  getChannelGroups(): Promise<ChannelGroup[]> {\n    return this.http.get(this.channelsUrl)\n               .toPromise()\n               .then(response => response.json().channelGroups.groups as ChannelGroup[])\n               .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/app/channels.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/subhash/workspaces/git/samples/channels-ui/src/main.ts"],"sourceRoot":"webpack:///"}